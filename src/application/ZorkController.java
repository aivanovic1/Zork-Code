package application;

import java.io.IOException;
import java.nio.charset.Charset;

import javafx.application.Platform;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.ListCell;
import javafx.scene.control.ListView;
import javafx.scene.control.TextField;
import javafx.scene.image.ImageView;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import javafx.scene.text.Text;
import javafx.stage.Stage;
import javafx.util.Callback;

/**
 * Controller generated by SceneBuilder (using for capturing user's commands and button clicks)
 *
 * @author Andrei Ivanovic
 *
 */
public class ZorkController {

	public final ObservableList history = FXCollections.observableArrayList();

	public final ObservableList commandsList = FXCollections.observableArrayList(
			"North, N, Go North, Go N", "South, S, Go South, Go S", "East, E, Go East, Go E", "West, W, Go West, Go W", "Take, T", "Drop, D", "Inspect", "Check, C", "Inventory, I");

    @FXML
    private Button helpButton;

    @FXML
    private Button invButton;

    @FXML
    private Button exitButton;

    @FXML
    private Label bottomLabel;

    @FXML
    private ListView<String> leftListView;

    @FXML
    private TextField commandTextBox;

    @FXML
    private ImageView imageView;

    @FXML
    private ListView<?> rightListView;

    @FXML
    private Label timerLabel;

    // main game logic
    private GameExecution game = null;

    @FXML
    void textChanged(ActionEvent event) {
    	//System.out.println("Text changed to: " + commandTextBox.getText());
    }

    /**
     * Initialized method
     */
    @FXML
    public void initialize() {
    	//System.out.println("In init() controller method!");

    	this.leftListView.setItems(this.history);
    	this.rightListView.setItems(this.commandsList);

        this.bottomLabel.setText("enter valid command to start playing Zork ...");

    	this.game = new GameExecution(Zork.startingRoom, Zork.player, this.history);

    	this.launchTheInitialStory(Zork.primaryStage);

    	Zork.currentRoom.setFirstTimeEntered(true);
    	Zork.mainHistoryList = this.history;

    	Zork.displayInHistoryPanel(Zork.currentRoom.getDescription());

    	// get the focus to the text box
    	this.commandTextBox.requestFocus();

    	// EXIT BUTTON
        this.exitButton.setOnAction(e -> Platform.exit());

        // INVENTORY BUTTON
        this.invButton.setOnAction(e -> launchTheInventoryDialogBox());

        // HELP BUTTON
        this.helpButton.setOnAction(e -> launchTheHelpDialogBox());

        // initially this label is not visible
        this.timerLabel.setFont(Font.font("Arial", FontWeight.BOLD, 14));
        this.timerLabel.setTextFill(Color.DARKRED);
        this.timerLabel.setVisible(false);

        // assign so we can later on manipulate it for the last minute of the game
        Zork.finalMinuteTimerLabel = this.timerLabel;

        // assign to the variable that can be accessed from various screens
        Zork.commandEntryTextField = this.commandTextBox;

        Platform.runLater(new Runnable() {
            @Override
            public void run() {
            	Zork.commandEntryTextField.requestFocus();
            }
        });

        // trick from Internet how to display multi-line text in the list-view
        // https://stackoverflow.com/questions/9964579/javafx-setwraptexttrue-wordwrap-doesnt-work-in-listview
        leftListView.setCellFactory(new Callback<ListView<String>, ListCell<String>>() {
            @Override
            public ListCell<String> call(final ListView<String> list) {
            	return new ListCell<String>() {
            		{
	                    Text text = new Text();
	                    text.wrappingWidthProperty().bind(list.widthProperty().subtract(15));
	                    text.textProperty().bind(itemProperty());

	                    setPrefWidth(0);
	                    setGraphic(text);
	                }
            	};
            }
        });

    	//Setting an action for the Submit button
	    commandTextBox.setOnAction(new EventHandler<ActionEvent>() {

		    @Override
		    public void handle(ActionEvent e) {
		        if ((commandTextBox.getText() != null && !commandTextBox.getText().isEmpty())) {

	        		Command command = game.validateCommand(commandTextBox.getText().trim());

		        	if( command.getVerb() != null) {
		        		bottomLabel.setText("You typed: " + commandTextBox.getText().trim());

		        		//history.add("Command entered: " + command.getOriginalEnteredCommand());

		        		// play the game for this command
		        		game.playGame(command);

		        	} else {
		        		// report invalid command
		        		bottomLabel.setText("Last status: incorrect command entered ... [" + command.getOriginalEnteredCommand() + "]");
		        	}

		        	commandTextBox.clear();
		        	commandTextBox.setPromptText("enter command here ...");

		        } else {
		        	bottomLabel.setText("Last status: you didn't enter a valid command ...");
		        }
		     }
	     });
    }

    /**
     * Launch Help
     *
     * @return
     */
    private Object launchTheHelpDialogBox() {

    	HelpView help = new HelpView();
    	help.display();

    	return null;
	}

	/**
     * Launch the initial story in the Dialog Box
     */
    private void launchTheInitialStory(Stage parentStage) {

    	Stage dialogBoxStage = new Stage();
    	FXMLLoader fxmlLoader = new FXMLLoader(Charset.forName("UTF-8"));

    	// load the initial story
    	Parent root = null;
		try {
			root = FXMLLoader.load(getClass().getResource("OpeningStoryPanel.fxml"));

		} catch (IOException e1) {
			e1.printStackTrace();
		}

		dialogBoxStage.setTitle("Zork story!");
		dialogBoxStage.setScene(new Scene(root));
		dialogBoxStage.setResizable(false);
		dialogBoxStage.showAndWait();
    }

    /**
     * Launch the initial story in the Dialog Box
     */
    private void launchTheInventoryDialogBox() {

    	InventoryTableView inventoryPanel = new InventoryTableView();
    	inventoryPanel.display();
    }

} // end ZorkController