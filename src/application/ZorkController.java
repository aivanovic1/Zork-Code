package application;

import java.io.IOException;

import javafx.application.Platform;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.ListView;
import javafx.scene.control.TextField;
import javafx.scene.image.ImageView;
import javafx.stage.Stage;

/**
 * Controller generated by SceneBuilder
 *
 * @author Andrei Ivanovic
 *
 */
public class ZorkController {

	public final ObservableList history = FXCollections.observableArrayList();

	public final ObservableList commandsList = FXCollections.observableArrayList(
			"North, N, Go North, Go N", "South, S, Go South, Go S", "East, E, Go East, Go E", "West, W, Go West, Go W", "Take, T", "Drop, D", "Inspect", "Check, C", "Inventory, I");

    @FXML
    private Button helpButton;

    @FXML
    private Button settingsButton;

    @FXML
    private Button exitButton;

    @FXML
    private Label bottomLabel;

    @FXML
    private ListView<?> leftListView;

    @FXML
    private TextField commandTextBox;

    @FXML
    private ImageView imageView;

    @FXML
    private ListView<?> rightListView;

    // main game logic
    private GameExecution game = null;

    @FXML
    void textChanged(ActionEvent event) {
    	System.out.println("Text changed to: " + commandTextBox.getText());
    }

    @FXML
    public void initialize() {
    	//System.out.println("In init() controller method!");

    	this.leftListView.setItems(this.history);
    	this.rightListView.setItems(this.commandsList);

    	Room entranceRoom = null;
        for(Room r : Zork.roomsMap.values()) {
        	if (r.isEntranceRoom()) {
        		entranceRoom = r;
        		break;
        	}
        }

    	this.game = new GameExecution(entranceRoom, Zork.player, this.history);

    	// load the initial story
    	Parent root = null;
		try {
			root = FXMLLoader.load(getClass().getResource("OpeningStoryPanel.fxml"));
		} catch (IOException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}

    	Zork.primaryStage.setTitle("FXML Welcome");
    	Zork.primaryStage.setScene(new Scene(root));
    	Zork.primaryStage.show();

        // EXIT BUTTON
        this.exitButton.setOnAction(e -> {
        	Platform.exit();
        });

    	//Setting an action for the Submit button
	    commandTextBox.setOnAction(new EventHandler<ActionEvent>() {

		    @Override
		    public void handle(ActionEvent e) {
		        if ((commandTextBox.getText() != null && !commandTextBox.getText().isEmpty())) {

	        		Command command = game.validateCommand(commandTextBox.getText().trim());

		        	if( command.getVerb() != null) {
		        		bottomLabel.setText("You typed: " + commandTextBox.getText().trim());
		        		history.add(command.generateFullCommand());

		        		game.playGame(command);

		        	} else {
		        		bottomLabel.setText("Last status: incorrect command entered ...");
		        	}

		        	commandTextBox.clear();
		        	commandTextBox.setPromptText("enter command here ...");

		        } else {
		        	bottomLabel.setText("Last status: you didn't enter a valid command ...");
		        }
		     }
	     });
    }

}	// end ZorkController